c
n
expect(chef_key.send(method)).to eq(public_key_string)
chef_key.send(method)
expect(chef_key).to receive(:get_key).with(request_actor_type).and_return(public_key_string)
public_key_string
get_key
chef_key
exit
c
n
e
n
http_response
n
step
n
non_existing
non_existing = Net::HTTPServerException.new("http error message", http_response)
allow(Chef::DataBagItem).to receive(:load).with(anything, /_key_/).and_raise(non_existing)
http_response
Net::HTTPServerException.new("http error message", http_response)
http_response
allow(http_response).to receive(:code).and_return("404")
http_response
n
